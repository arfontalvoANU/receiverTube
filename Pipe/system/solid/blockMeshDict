/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

angledeg	45.0;
rext		15.0;
rint		13.0;
pipel		100.0;

anglerad	#calc "degToRad($angledeg)";
maxY		#calc "$rext*cos($anglerad)";
minY		#calc "-1.0*$rext*cos($anglerad)";
maxZ		#calc "$rext*cos($anglerad)";
minZ		#calc "-1.0*$rext*cos($anglerad)";
rextneg	#calc "-1.0*$rext";
maxY2		#calc "$rint*cos($anglerad)";
minY2		#calc "-1.0*$rint*cos($anglerad)";
maxZ2		#calc "$rint*cos($anglerad)";
minZ2		#calc "-1.0*$rint*cos($anglerad)";
rintneg	#calc "-1.0*$rint";

vertices
(
    (0.0 $minY $minZ)	//0
    ($pipel $minY $minZ)//1
    ($pipel $maxY $minZ)//2
    (0.0 $maxY $minZ)	//3

    (0.0 $minY $maxZ)	//4
    ($pipel $minY $maxZ)//5
    ($pipel $maxY $maxZ)//6
    (0.0 $maxY $maxZ)	//7

    (0.0 0.0 0.0)	//8
    ($pipel 0.0 0.0)	//9

    (0.0 $minY2 $minZ2)	//10
    ($pipel $minY2 $minZ2)//11
    ($pipel $maxY2 $minZ2)//12
    (0.0 $maxY2 $minZ2)	//13

    (0.0 $minY2 $maxZ2)	//14
    ($pipel $minY2 $maxZ2)//15
    ($pipel $maxY2 $maxZ2)//16
    (0.0 $maxY2 $maxZ2)	//17

);

blocks
(
	hex (0 3 13 10 1 2 12 11) (10 10 10) simpleGrading (1 1 1) // (tangential radial axial)
	hex (4 0 10 14 5 1 11 15) (10 10 10) simpleGrading (1 1 1) // (tangential radial axial)
);

edges
(
    arc 4 0 (0 $rextneg 0)
    arc 0 3 (0 0 $rextneg)
    arc 14 10 (0 $rintneg 0)
    arc 10 13 (0 0 $rintneg)
    arc 5 1 ($pipel $rextneg 0)
    arc 1 2 ($pipel 0 $rextneg)
    arc 15 11 ($pipel $rintneg 0)
    arc 11 12 ($pipel 0 $rintneg)

);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (4 14 10 0)
            (0 10 13 3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (5 15 11 1)
            (1 11 12 2)

        );
    }
    wallext
    {
        type wall;
        faces
        (
            (5 4 0 1)
            (1 0 3 2)

        );
    }
    wallint
    {
        type wall;
        faces
        (
            (15 14 10 11)
            (11 10 13 12)

        );
    }
    symmetry1
    {
        type empty;
        faces
        (
            (4 5 15 14)
        );
    }
    symmetry2
    {
        type empty;
        faces
        (
            (13 12 2 3)
        );
    }
);

mergePatchPairs
(

);

// ************************************************************************* //
